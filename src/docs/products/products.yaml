paths:
   /api/products/:
      get:
         summary: "Get all products"
         tags:
            - Products
         responses:
            200:
               description: "OK"
            500:
               description: "Error getting products"
      post:
         summary: "Create a new product"
         tags:
            - Products
         responses:
            200:
               description: "OK"
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/Products"
            500:
               description: "Error creating product"
   /api/products/paginated/:
      get:
         summary: "Get all products paginated"
         tags:
            - Products
         responses:
            200:
               description: "OK"
            500:
               description: "Error getting paginated product"
   /api/products/{id}/:
      get:
         summary: "Get a specific product by id"
         tags:
            - Products
         parameters:
            - name: id
              in: path
              required: true
              description: Id of the product
              schema:
                 $type: ObjectId

         responses:
            200:
               description: "OK"
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/Products"
            500:
               description: "Error getting a specifict product"
      put:
         summary: "Modify a specific product by id (Auth required)"
         tags:
            - Products
         responses:
            200:
               description: "OK"
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/Products"
            401:
               description: "Unauthorized"
            500:
               description: "Error updating product"
      delete:
         summary: "Delete a specific product by id (Auth required)"
         tags:
            - Products
         responses:
            200:
               description: "OK"
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/Products"
            401:
               description: "Unauthorized"
            500:
               description: "Error deleting product"
components:
   schemas:
      Products: 
         type: object
         properties:
            _id: 
               type: ObjectId
               description: Autogenerated id
            name: 
               type: String
               description: Name of the product
            description: 
               type: String
               description: Description of the product
            sku: 
               type: String
               description: Code of the product
            price: 
               type: Number
               description: Original price of the product
            stock: 
               type: Number
               description: Stock available of the product
            status: 
               type: Boolean
               description: Status of the availability of the product
            category: 
               type: String
               description: Category of the product
            owner: 
               type: ObjectId
               description: User who created the product
         example:
            _id: ObjectId("644be77fa839c7c99b9529fb")
            name: Producto 1
            description: Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam possimus nostrum nemo cumque reiciendis quaerat!
            sku: 21d2d56f3acf
            price: 1990
            stock: 7
            status: true
            category: default
            owner: ObjectId("64555e84b9cc04fb62fb28a9")